[
    {
        "id": "33dad7de1f6b6a6a",
        "type": "tab",
        "label": "Tarea2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d27cb1b3135afea0",
        "type": "mqtt out",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "topic": "timestamp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c5b954e98d6b5e59",
        "x": 890,
        "y": 220,
        "wires": []
    },
    {
        "id": "453d864c56170912",
        "type": "inject",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "thingsdata",
        "payloadType": "date",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "d27cb1b3135afea0"
            ]
        ]
    },
    {
        "id": "ce02343e3c0f73b4",
        "type": "mqtt in",
        "z": "33dad7de1f6b6a6a",
        "name": "listen things",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "c5b954e98d6b5e59",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 420,
        "wires": [
            [
                "01e4f4e83259e897"
            ]
        ]
    },
    {
        "id": "90fcd094c6197c2f",
        "type": "debug",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 420,
        "wires": []
    },
    {
        "id": "182dbfb73da5c995",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/pub/:topic/:payload",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "c8b78018c1256560"
            ]
        ]
    },
    {
        "id": "2fe4dd5cdf3ec515",
        "type": "mqtt out",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c5b954e98d6b5e59",
        "x": 670,
        "y": 280,
        "wires": []
    },
    {
        "id": "c8b78018c1256560",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create message",
        "func": "msg.topic = msg.req.params.topic.toString();\nmsg.payload = msg.req.params.payload.toString();\nmsg.qos = 2;\nmsg.retain = false;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 340,
        "wires": [
            [
                "2fe4dd5cdf3ec515",
                "8522664aca8e75ab"
            ]
        ]
    },
    {
        "id": "8522664aca8e75ab",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create response",
        "func": "msg.payload = {\n    success: true,\n    message: \"published \" +\n        msg.req.params.topic +\n        \"/\" +\n        msg.req.params.payload\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 340,
        "wires": [
            [
                "4bb936a3923460f6"
            ]
        ]
    },
    {
        "id": "4bb936a3923460f6",
        "type": "http response",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 340,
        "wires": []
    },
    {
        "id": "01e4f4e83259e897",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create query",
        "func": "// get microtime\nvar timestamp = new Date().getTime()/1000;\n\n//paid it with trailing zeroes\ntimestamp = timestamp.toString() + \"000\";\n\n//trim to exact  length 10 + 1 + 3\ntimestamp = timestamp.substring(0,14);\n\nvar strQuery = \"INSERT INTO thingData (topic,payload,timestamp,deleted) VALUES ('\" + escape(msg.topic) + \"','\" + escape(msg.payload) + \"','\" + timestamp +\"', 0);\";\nmsg.topic = strQuery;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 420,
        "wires": [
            [
                "a70613eb15f83211"
            ]
        ]
    },
    {
        "id": "a70613eb15f83211",
        "type": "mysql",
        "z": "33dad7de1f6b6a6a",
        "mydb": "315d31040b2beac9",
        "name": "",
        "x": 620,
        "y": 420,
        "wires": [
            [
                "90fcd094c6197c2f"
            ]
        ]
    },
    {
        "id": "f236e238ba2f63aa",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/get/:topic",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 500,
        "wires": [
            [
                "303bdea153683d5c"
            ]
        ]
    },
    {
        "id": "85f659c2f8630f65",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/get/:topic/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 560,
        "wires": [
            [
                "303bdea153683d5c"
            ]
        ]
    },
    {
        "id": "303bdea153683d5c",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create query",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n// build the sql query\nmsg.topic = \"SELECT id,topic,payload,timestamp \" + \n            \"FROM thingData \" +\n            \"WHERE topic='\" + escape(msg.req.params.topic) + \"' \" +\n            \"AND deleted=0 \" +\n            \"ORDER BY id DESC \" +\n            \"LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 540,
        "wires": [
            [
                "fa591c3513ae3d4e"
            ]
        ]
    },
    {
        "id": "fa591c3513ae3d4e",
        "type": "mysql",
        "z": "33dad7de1f6b6a6a",
        "mydb": "315d31040b2beac9",
        "name": "",
        "x": 540,
        "y": 540,
        "wires": [
            [
                "11035fcf149d5b3a"
            ]
        ]
    },
    {
        "id": "a59c26cdd59c0f47",
        "type": "http response",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 540,
        "wires": []
    },
    {
        "id": "11035fcf149d5b3a",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "prepare response",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 540,
        "wires": [
            [
                "a59c26cdd59c0f47"
            ]
        ]
    },
    {
        "id": "fff51382a6b964c5",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/get/topicLike/:topic/payloadLike/:payload/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 640,
        "wires": [
            [
                "c74c7d3e7e29b65c"
            ]
        ]
    },
    {
        "id": "c74c7d3e7e29b65c",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create query",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif (!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// wildcard used for api query is * and this needs to be\n// converted into SQL wildcard character %\nmsg.topic = \"SELECT id, topic, payload, timestamp\" +\n            \" FROM thingData WHERE\" + \n            \" topic LIKE '\" + msg.req.params.topic.replace(/\\*/g,\"%\") + \n            \"'\" + \" AND\" + \n            \" payload LIKE '\"+msg.req.params.payload.replace(/\\*/g,\"%\") + \n            \"'\" + \" AND deleted=0\" + \n            \" AND (\" + msg.req.authFilter + \")\" + \n            \" ORDER BY ID DESC\" + \n            \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 680,
        "wires": [
            [
                "0ab9662cfc017ca5"
            ]
        ]
    },
    {
        "id": "0ab9662cfc017ca5",
        "type": "mysql",
        "z": "33dad7de1f6b6a6a",
        "mydb": "315d31040b2beac9",
        "name": "",
        "x": 540,
        "y": 680,
        "wires": [
            [
                "a30451626d4c64ac"
            ]
        ]
    },
    {
        "id": "a30451626d4c64ac",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "prepare response",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 680,
        "wires": [
            [
                "92400e7390eb1ea6"
            ]
        ]
    },
    {
        "id": "92400e7390eb1ea6",
        "type": "http response",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 680,
        "wires": []
    },
    {
        "id": "c45d6b96c7c762ac",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/get/:topic/after/:time/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 760,
        "wires": [
            [
                "c671cbeb9c91094d"
            ]
        ]
    },
    {
        "id": "beb40cbc40e7cc1e",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/get/:topic/before/:time/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "037eadc3a99421e0"
            ]
        ]
    },
    {
        "id": "54e43049819c5a7f",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/get/:topic/during/:start/:end/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 840,
        "wires": [
            [
                "32f94c8407787165"
            ]
        ]
    },
    {
        "id": "c671cbeb9c91094d",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create After query",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif (!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// wildcard used for api query is * and this needs to be\n// converted into SQL wildcard character %\nmsg.topic = \"SELECT id, topic, payload, timestamp\" +\n            \" FROM thingData WHERE\" + \n            \" topic LIKE '\" + msg.req.params.topic.replace(/\\*/g,\"%\") + \n            \"'\" + \" AND\" +\n            \" timestamp >= '\" + msg.req.params.time + \"'\" +\n            \" AND deleted=0\" + \n            \" AND (\" + msg.req.authFilter + \")\" + \n            \" ORDER BY ID DESC\" + \n            \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 760,
        "wires": [
            [
                "5813c861ce8817d3"
            ]
        ]
    },
    {
        "id": "5813c861ce8817d3",
        "type": "mysql",
        "z": "33dad7de1f6b6a6a",
        "mydb": "315d31040b2beac9",
        "name": "",
        "x": 620,
        "y": 800,
        "wires": [
            [
                "160cd3b1c4fb9c2a"
            ]
        ]
    },
    {
        "id": "160cd3b1c4fb9c2a",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "prepare response",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 800,
        "wires": [
            [
                "9a55bbae2c478559"
            ]
        ]
    },
    {
        "id": "9a55bbae2c478559",
        "type": "http response",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 800,
        "wires": []
    },
    {
        "id": "037eadc3a99421e0",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create before query",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif (!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// wildcard used for api query is * and this needs to be\n// converted into SQL wildcard character %\nmsg.topic = \"SELECT id, topic, payload, timestamp\" +\n            \" FROM thingData WHERE\" + \n            \" topic LIKE '\" + msg.req.params.topic.replace(/\\*/g,\"%\") + \n            \"'\" + \" AND\" +\n            \" timestamp <= '\" + msg.req.params.time + \"'\" +\n            \" AND deleted=0\" + \n            \" AND (\" + msg.req.authFilter + \")\" + \n            \" ORDER BY ID DESC\" + \n            \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 800,
        "wires": [
            [
                "5813c861ce8817d3"
            ]
        ]
    },
    {
        "id": "32f94c8407787165",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create during query",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif (!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\n// wildcard used for api query is * and this needs to be\n// converted into SQL wildcard character %\nmsg.topic = \"SELECT id, topic, payload, timestamp\" +\n            \" FROM thingData WHERE\" + \n            \" topic LIKE '\" + msg.req.params.topic.replace(/\\*/g,\"%\") + \n            \"'\" + \" AND\" +\n            \" timestamp >= '\" + msg.req.params.start + \"'\" +\n            \" AND\" + \n            \" timestamp <= '\" + msg.req.params.end + \"'\" +\n            \" AND deleted=0\" + \n            \" AND (\" + msg.req.authFilter + \")\" + \n            \" ORDER BY ID DESC\" + \n            \" LIMIT \" + msg.req.params.count + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 840,
        "wires": [
            [
                "5813c861ce8817d3"
            ]
        ]
    },
    {
        "id": "9dd12e1ea90e9821",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/delete/:topic/id/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 900,
        "wires": [
            [
                "72256bf11ee96825"
            ]
        ]
    },
    {
        "id": "5e18d5e4734475c8",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/delete/:topic",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 940,
        "wires": [
            [
                "b1dc91e7517e01f3"
            ]
        ]
    },
    {
        "id": "339bfbbfb3b0fbc7",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/delete/:topic/first/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 980,
        "wires": [
            [
                "e0062dc9094accb0"
            ]
        ]
    },
    {
        "id": "370dfc7832c6ff46",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/delete/:topic/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1020,
        "wires": [
            [
                "8ca6350eb2a8e5f8"
            ]
        ]
    },
    {
        "id": "72256bf11ee96825",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create query",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic = \"UPDATE thingData\" +\n            \" SET deleted=1\" +\n            \" WHERE\" +\n            \" topic='\" + msg.req.params.topic + \"'\"+\n            \" AND (\" + msg.req.authFilter + \")\" +\n            \" AND id=\" + msg.req.params.id + \";\";\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 900,
        "wires": [
            [
                "8690802722589b07"
            ]
        ]
    },
    {
        "id": "8690802722589b07",
        "type": "mysql",
        "z": "33dad7de1f6b6a6a",
        "mydb": "315d31040b2beac9",
        "name": "",
        "x": 580,
        "y": 960,
        "wires": [
            [
                "68089661179542fc"
            ]
        ]
    },
    {
        "id": "68089661179542fc",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "prepare response",
        "func": "msg.payload = {\n    \"found\" : msg.payload.affectedRows,\n    \"changed\": msg.payload.changedRows,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 960,
        "wires": [
            [
                "a9ebd89bb9c1e801"
            ]
        ]
    },
    {
        "id": "a9ebd89bb9c1e801",
        "type": "http response",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 960,
        "wires": []
    },
    {
        "id": "b1dc91e7517e01f3",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create query",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic = \"UPDATE thingData\" +\n            \" SET deleted=1\" +\n            \" WHERE\" +\n            \" topic='\" + msg.req.params.topic + \"'\"+\n            \" AND (\" + msg.req.authFilter + \");\";\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 940,
        "wires": [
            [
                "8690802722589b07"
            ]
        ]
    },
    {
        "id": "e0062dc9094accb0",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create query",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic = \"DELETE thingData\" +\n            \" WHERE deleted=1\" +\n            \" AND\" +\n            \" topic='\" + msg.req.params.topic + \"'\"+\n            \" AND (\" + msg.req.authFilter + \")\" +\n            \" ORDER BY id DESC LIMIT \" + msg.req.params.count +\n            \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 980,
        "wires": [
            [
                "8690802722589b07"
            ]
        ]
    },
    {
        "id": "8ca6350eb2a8e5f8",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create query",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic = \"DELETE thingData\" +\n            \" WHERE deleted=1\" +\n            \" AND\" +\n            \" topic='\" + msg.req.params.topic + \"'\"+\n            \" AND (\" + msg.req.authFilter + \")\" +\n            \" ORDER BY id DESC LIMIT \" + msg.req.params.count +\n            \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1020,
        "wires": [
            [
                "8690802722589b07"
            ]
        ]
    },
    {
        "id": "42bc26e12c86ec3b",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/purge/:topic/id/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1100,
        "wires": [
            [
                "7ee75cd14920658e"
            ]
        ]
    },
    {
        "id": "063f17f4f13d7403",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/purge/:topic",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1140,
        "wires": [
            [
                "f1802153817d7031"
            ]
        ]
    },
    {
        "id": "a4b6cfd30e08b5d0",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/purge/:topic/first/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1180,
        "wires": [
            [
                "e5b965ce1f132fab"
            ]
        ]
    },
    {
        "id": "9c4fc4854cfc8efb",
        "type": "http in",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "url": "/purge/:topic/last/:count",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1220,
        "wires": [
            [
                "dae7f4c648cb1125"
            ]
        ]
    },
    {
        "id": "7ee75cd14920658e",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create query",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic = \"DELETE thingData\" +\n            \" WHERE deleted=1\" +\n            \" AND\" +\n            \" topic='\" + msg.req.params.topic + \"'\"+\n            \" AND (\" + msg.req.authFilter + \")\" +\n            \" AND id=\" + msg.req.params.id + \";\";\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1100,
        "wires": [
            [
                "e47ef00c8afa66bc"
            ]
        ]
    },
    {
        "id": "e47ef00c8afa66bc",
        "type": "mysql",
        "z": "33dad7de1f6b6a6a",
        "mydb": "315d31040b2beac9",
        "name": "",
        "x": 560,
        "y": 1160,
        "wires": [
            [
                "38a695d6c9497fca"
            ]
        ]
    },
    {
        "id": "38a695d6c9497fca",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "prepare response",
        "func": "msg.payload = {\n    \"found\" : msg.payload.affectedRows,\n    \"changed\": msg.payload.changedRows,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1160,
        "wires": [
            [
                "2f0bcb9fef47efa9"
            ]
        ]
    },
    {
        "id": "2f0bcb9fef47efa9",
        "type": "http response",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f1802153817d7031",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create query",
        "func": "// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic = \"DELETE thingData\" +\n            \" WHERE deleted=1\" +\n            \" AND\" +\n            \" topic='\" + msg.req.params.topic + \"'\"+\n            \" AND (\" + msg.req.authFilter + \");\";\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1140,
        "wires": [
            [
                "e47ef00c8afa66bc"
            ]
        ]
    },
    {
        "id": "e5b965ce1f132fab",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create query",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic = \"DELETE thingData\" +\n            \" WHERE deleted=1\" +\n            \" AND\" +\n            \" topic='\" + msg.req.params.topic + \"'\"+\n            \" AND (\" + msg.req.authFilter + \")\" + \n            \" ORDER BY id ASC LIMIT \" +msg.req.params.count+\";\";\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1180,
        "wires": [
            [
                "e47ef00c8afa66bc"
            ]
        ]
    },
    {
        "id": "dae7f4c648cb1125",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create query",
        "func": "// if required record count is not specified\n// set default to 1\nif(!msg.req.params.count)\n    msg.req.params.count = 1;\n\n// if no authentication filter defined or available\n// set the default value as 1\nif(!msg.req.authFilter)\n    msg.req.authFilter = 1;\n\nmsg.topic = \"DELETE thingData\" +\n            \" WHERE deleted=1\" +\n            \" AND\" +\n            \" topic='\" + msg.req.params.topic + \"'\"+\n            \" AND (\" + msg.req.authFilter + \")\" + \n            \" ORDER BY id DESC LIMIT \" +msg.req.params.count+\";\";\n            \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1220,
        "wires": [
            [
                "e47ef00c8afa66bc"
            ]
        ]
    },
    {
        "id": "fdc6c20a41927b61",
        "type": "mqtt in",
        "z": "33dad7de1f6b6a6a",
        "name": "listen things",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "c5b954e98d6b5e59",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 1380,
        "wires": [
            [
                "8853daa709375056",
                "7e5572d9f1efbe58"
            ]
        ]
    },
    {
        "id": "f0811aad4367b0d5",
        "type": "debug",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1380,
        "wires": []
    },
    {
        "id": "8853daa709375056",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "create query",
        "func": "// get microtime\nvar timestamp = new Date().getTime()/1000;\n\n//paid it with trailing zeroes\ntimestamp = timestamp.toString() + \"000\";\n\n//trim to exact  length 10 + 1 + 3\ntimestamp = timestamp.substring(0,14);\n\nvar strQuery = \"INSERT INTO thingData (topic,payload,timestamp,deleted) VALUES ('\" + escape(msg.topic) + \"','\" + escape(msg.payload) + \"','\" + timestamp +\"', 0);\";\nmsg.topic = strQuery;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1380,
        "wires": [
            [
                "92c7e0ef5d8abbc3"
            ]
        ]
    },
    {
        "id": "92c7e0ef5d8abbc3",
        "type": "mysql",
        "z": "33dad7de1f6b6a6a",
        "mydb": "315d31040b2beac9",
        "name": "",
        "x": 400,
        "y": 1380,
        "wires": [
            [
                "f0811aad4367b0d5"
            ]
        ]
    },
    {
        "id": "7e5572d9f1efbe58",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "search rules",
        "func": "// get microtime\n\nvar strQuery = \"SELECT * FROM ruleEngine\" + \n                \" WHERE\" +\n                \" ('\" + msg.topic + \"' LIKE topicPattern)\" +\n                \" AND\" + \n                \" ('\" + msg.payload + \"' LIKE payloadPattern)\" +\n                \" AND active=1\";\nmsg.topic = strQuery;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1420,
        "wires": [
            [
                "605c0f4491267297"
            ]
        ]
    },
    {
        "id": "605c0f4491267297",
        "type": "mysql",
        "z": "33dad7de1f6b6a6a",
        "mydb": "315d31040b2beac9",
        "name": "",
        "x": 400,
        "y": 1420,
        "wires": [
            [
                "b98049baf67abd96"
            ]
        ]
    },
    {
        "id": "b98049baf67abd96",
        "type": "function",
        "z": "33dad7de1f6b6a6a",
        "name": "call webhook",
        "func": "if (msg.payload.length !== 0){\n    for(var i=0; i< msg.payload.length; i++){\n        msg.method = msg.payload[i].method;\n        msg.url = msg.payload[i].webHook;\n        \n        node.send([msg]);\n    }\n}\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1420,
        "wires": [
            [
                "7d593f7202612655"
            ]
        ]
    },
    {
        "id": "7d593f7202612655",
        "type": "http request",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 750,
        "y": 1420,
        "wires": [
            [
                "8339d78dbe34a229"
            ]
        ]
    },
    {
        "id": "8339d78dbe34a229",
        "type": "debug",
        "z": "33dad7de1f6b6a6a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1420,
        "wires": []
    },
    {
        "id": "c5b954e98d6b5e59",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.17.0.1",
        "port": "1883",
        "clientid": "node-red",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "315d31040b2beac9",
        "type": "MySQLdatabase",
        "name": "",
        "host": "172.17.0.1",
        "port": "3306",
        "db": "tSeriesDB",
        "tz": "",
        "charset": "UTF8"
    }
]